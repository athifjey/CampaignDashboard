{"version":3,"sources":["components/styledDatepicker/styledDatepicker.jsx","components/search/search.js","components/campaignTable/campaignTable.js","templates/campaign-template/campaign-template.js","App.js","serviceWorker.js","index.js"],"names":["StyledDatepicker","selStartDate","selEndDate","React","useState","Date","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","utils","DateFnsUtils","Grid","margin","id","label","format","value","onChange","date","console","log","KeyboardButtonProps","Search","props","useStyles","makeStyles","theme","button","spacing","input","display","inputValue","event","setState","searchValue","target","onSubmit","preventDefault","startD","state","endD","dateError","resetTable","emitSearchForm","onReset","data","this","className","bind","TextField","ref","placeholder","name","Button","variant","color","onClick","Component","CampaignTable","window","Campaign","exData","firstReset","columns","title","field","type","render","rowData","startDate","endDate","active","Budget","displayType","thousandSeparator","prefix","tableData","modifyCampData","prevProps","prevState","emittedSearchData","resetTableFn","filterCampData","nextProps","nextState","campD","tempData","map","item","i","o","Object","assign","tempStDt","tempEndDt","today","filterData","newFilData","filter","row","tableStDate","tableEndDate","selStDate","toLowerCase","includes","tempTabData","options","search","CampaignTemplate","emitSearchFormFn","e","Container","Box","my","Typography","component","gutterBottom","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24ef50ab.chunk.js","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './styledDatepicker.css';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst StyledDatepicker = ({selStartDate, selEndDate}) => {\n \n  // The first commit of Material-UI\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  \n  \n  const handleStartDateChange = (date) => {\n    console.log(date)\n    setSelectedStartDate(date);    \n    selStartDate(date);\n  };\n\n  const handleEndDateChange = (date) => {\n    setSelectedEndDate(date);\n    selEndDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n      <Grid>\n\n        <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"start-date-picker-dialog\"\n          label=\"Start date\"\n          format=\"MM/dd/yyyy\"\n          value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"end-date-picker-dialog\"\n          label=\"End date\"\n          format=\"MM/dd/yyyy\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default StyledDatepicker","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './search.css'\nimport StyledDatepicker from '../styledDatepicker';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nclass Search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: '',\n      selStartDate: Date(),\n      selEndDate: Date(),\n      dateError: ''\n    };\n  }\n\n  useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n  }));\n\n  // Fetching the start date from date picker\n  selectedStartDate(data) {\n    this.setState({\n      selStartDate: data\n    })\n  }\n\n  // Fetching the end date from date picker\n  selectedEndDate(data) {\n    this.setState({\n      selEndDate: data\n    })\n  }\n\n  // Fetching the search input\n  inputValue = (event) => {\n    this.setState(\n      {\n        searchValue: event.target.value\n      }\n    );\n\n  }\n\n  // Function to call when SEARCH is clicked\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    var startD = new Date(this.state.selStartDate);\n    var endD = new Date(this.state.selEndDate);\n\n    if (startD <= endD) {\n      this.setState({\n        dateError: '',\n        selStartDate: startD,\n        selEndDate: endD,\n        resetTable: false\n      });\n      this.props.emitSearchForm(this.state)\n    } else {\n      this.setState({ dateError: 'Start date cannot be greater than End date' });\n    }\n  }\n\n  // Function to call when RESET is clicked\n  onReset = (event) => {\n    event.preventDefault();\n    this.props.resetTable(true);\n  }\n\n  render() {\n    let dateError;\n    if (this.state.dateError) {\n      dateError = <div>{this.state.dateError}</div>\n    }\n    else {\n      dateError = '';\n    }\n\n    return (\n      <div className=\"flex-column search-bg search-container\">\n        <div className=\"flex-row search-bg search-form-container\">\n\n          <div className=\"flex-column\">\n            <StyledDatepicker\n              selStartDate={this.selectedStartDate.bind(this)}\n              selEndDate={this.selectedEndDate.bind(this)} />\n            <div className=\"error-class\">\n              {dateError}\n            </div>\n          </div>\n\n          <div className=\"label-or\">\n            --OR--\n          </div>\n\n          <div className=\"input-container flex-column\">\n            <TextField\n              ref='search'\n              id=\"standard-with-placeholder\"\n              label=\"Campaign name\"\n              placeholder=\"\"\n              name=\"search\"\n              className=\"textfield-class\"\n              onChange={this.inputValue}\n            />\n          </div>\n\n          <div className=\"button-container\">\n            <div className=\"flex-row\">\n\n              <Button\n                variant=\"outlined\" color=\"secondary\" className={this.useStyles.button}\n                onClick={this.onSubmit}>\n                SEARCH\n              </Button>\n              <Button \n                variant=\"outlined\" color=\"primary\" className={this.useStyles.button}\n                onClick={this.onReset}>RESET</Button>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"info-text\">\n          You can either search with Date range or with Campaign name. Searching with all values will only search with campaign name.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport Moment from 'react-moment';\nimport CurrencyFormat from 'react-currency-format';\n\n// Local imports\nimport './campaignTable.css';\nimport '../../App.css';\n\nclass CampaignTable extends Component {\n\n  constructor(props) {\n    super(props);\n    window.Campaign = this;\n    this.state = {\n      exData: 'exData',\n      firstReset: false,\n      columns: [\n        { title: 'Name', field: 'name' },\n        {\n          title: 'Start date', field: 'startDate', type: 'date',\n          render: rowData => <Moment format=\"YYYY/MM/DD\">{rowData.startDate}</Moment>\n        },\n        {\n          title: 'End date', field: 'endDate',\n          render: rowData => <Moment format=\"YYYY/MM/DD\">{rowData.endDate}</Moment>\n        },\n        {\n          title: 'Active',\n          field: 'active',\n\n          render: rowData => (\n            <div className=\"flex-row flex-just-start flex-align-center\">\n              <div className={(rowData.active === 'Inactive' ? 'red-dot' : 'green-dot')}></div>\n              <div>{rowData.active}</div>\n            </div>)\n        },\n        {\n          title: 'Budget', field: 'Budget',\n          render: rowData => (<CurrencyFormat value={rowData.Budget} displayType={'text'} thousandSeparator={true} prefix={'$'} />)\n        }\n      ],\n      data: [\n        {\n          id: '1',\n          name: 'Sea campaign',\n          startDate: '9/19/2017',\n          endDate: '3/9/2018',\n          Budget: '30000'\n        },\n        {\n          id: '2',\n          name: 'Land campaign',\n          startDate: 'Mon Jun 06 2016 14:49:00 GMT+0530 (India Standard Time)',\n          endDate: 'Tue Oct 19 2021 14:49:00 GMT+0530 (India Standard Time)',\n          Budget: '40000'\n        },\n        {\n          id: '3',\n          name: 'January campaign',\n          startDate: 'Sat Oct 31 2020 14:52:00 GMT+0530 (India Standard Time)',\n          endDate: 'Thu Dec 31 2026 14:52:00 GMT+0530 (India Standard Time)',\n          Budget: '42000'\n        },\n        {\n          id: '4',\n          name: 'February campaign',\n          startDate: 'Fri Oct 29 2010 14:53:00 GMT+0530 (India Standard Time)',\n          endDate: 'Sat Feb 01 2014 14:53:00 GMT+0530 (India Standard Time)',\n          Budget: '49000'\n        },\n        {\n          id: '5',\n          name: 'March campaign',\n          startDate: 'Sun Feb 01 2009 14:46:00 GMT+0530 (India Standard Time)',\n          endDate: 'Wed May 15 2019 14:46:00 GMT+0530 (India Standard Time)',\n          Budget: '50000'\n        },\n        {\n          id: '6',\n          name: 'Summer campaign',\n          startDate: 'Mon Jun 06 2016 14:49:00 GMT+0530 (India Standard Time)',\n          endDate: 'Tue Oct 19 2021 14:49:00 GMT+0530 (India Standard Time)',\n          Budget: '65000'\n        },\n        {\n          id: '7',\n          name: 'Winter campaign',\n          startDate: 'Fri Oct 29 2010 14:53:00 GMT+0530 (India Standard Time)',\n          endDate: 'Sat Feb 01 2014 14:53:00 GMT+0530 (India Standard Time)',\n          Budget: '70000'\n        },\n        {\n          id: '8',\n          name: 'Autumn campaign',\n          startDate: 'Sun Feb 01 2009 14:46:00 GMT+0530 (India Standard Time)',\n          endDate: 'Wed May 15 2019 14:46:00 GMT+0530 (India Standard Time)',\n          Budget: '80000'\n        },\n        {\n          id: '9',\n          name: 'Rain campaign',\n          startDate: 'Sat Oct 31 2020 14:52:00 GMT+0530 (India Standard Time)',\n          endDate: 'Thu Dec 31 2026 14:52:00 GMT+0530 (India Standard Time)',\n          Budget: '95000'\n        },\n        {\n          id: '10',\n          name: 'Water campaign',\n          startDate: 'Fri Oct 29 2010 14:53:00 GMT+0530 (India Standard Time)',\n          endDate: 'Sat Feb 01 2014 14:53:00 GMT+0530 (India Standard Time)',\n          Budget: '100000'\n        },\n      ],\n      tableData: [],\n      resetTable: false\n    };\n\n    this.tableData = [];\n  }\n\n  componentDidMount() {\n    this.modifyCampData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (this.props.emittedSearchData !== prevProps.emittedSearchData) {\n      if (this.props.emittedSearchData.resetTable) {\n        this.resetTableFn(); // Function to call when Reset is clicked\n      } else {\n        this.filterCampData(); //To filter based on search\n      }\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    // To update table data\n    if (this.state.tableData !== nextState.tableData) {\n      return true;\n    }\n\n    // To check if emitted prop is updated\n    if (this.props.emittedSearchData !== nextProps.emittedSearchData) {\n      return true;\n    }\n\n    // To update the dynamic data import from browser console\n    if (this.state.data !== nextState.data) {\n      return true;\n    }\n\n    // To verify reset state\n    if (this.state.resetTable !== nextState.resetTable) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  // To add campaigns through browser console\n  AddCampaigns(campD) {\n    this.setState({ data: campD });\n    this.modifyCampData();\n  }\n\n  // Method to add active status to the response based on date range\n  modifyCampData() {\n\n    var tempData = this.state.data.map((item, i) => {\n      var o = Object.assign({}, item);\n      var tempStDt = new Date(item.startDate)\n      var tempEndDt = new Date(item.endDate);\n      var today = new Date();\n      if (today <= tempEndDt && today >= tempStDt) {\n        o.active = 'Active';\n      } else {\n        o.active = 'Inactive';\n      }\n      return o;\n    })\n\n    this.setState({\n      data: tempData,\n      tableData: tempData\n    })\n\n  }\n\n  // Method for filtering the table data\n  filterCampData() {\n    var filterData = this.state.data;\n    this.setState({ resetTable: false });\n    var searchValue = this.props.emittedSearchData.searchValue;\n    var newFilData = [];\n\n    \n    if (searchValue === '') {\n      // eslint-disable-next-line\n      newFilData = filterData.filter((row) => {\n        var tableStDate = new Date(row.startDate);\n        var tableEndDate = new Date(row.endDate);\n        var selStDate = new Date(this.props.emittedSearchData.selStartDate);\n        var selEndDate = new Date(this.props.emittedSearchData.selEndDate);\n\n        if (tableStDate > selStDate && tableEndDate < selEndDate) {\n          return row;\n        }\n      })\n\n      this.setState({\n        tableData: newFilData\n      })\n    } else {\n\n      searchValue = searchValue.toLowerCase();\n\n      newFilData = filterData.filter((row) => {\n        return row.name.toLowerCase().includes(searchValue);\n      });\n\n      this.setState({\n        tableData: newFilData\n      })\n\n    }\n  }\n\n  // Method to reset the table\n  resetTableFn() {\n    var tempTabData = this.state.data;\n    this.setState({\n      resetTable: false,\n      tableData: tempTabData\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <MaterialTable\n          title=\"Campaigns\"\n          columns={this.state.columns}\n          data={this.state.tableData}\n          options={{\n            search: false\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default CampaignTable;\n","import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n// import Link from '@material-ui/core/Link';\n\nimport '../../App.css'\n\nimport Search from '../../components/search/search';\nimport CampaignTable from '../../components/campaignTable/campaignTable';\n\nclass CampaignTemplate extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      searchValue: '',\n      selEndDate: '',\n      selStartDate: '',\n      resetTable : false,\n      data:[]\n    };\n  }\n\n  // Emitter to fetch Search data from search.js\n  emitSearchFormFn = (e) => {\n    this.setState({\n      searchValue: e.searchValue,\n      selEndDate: e.selEndDate,\n      selStartDate: e.selStartDate,\n      resetTable: false\n    })\n  }\n\n  // Emitter to fetch Reset data from search.js\n  resetTableFn = (e) => {\n    this.setState({ resetTable: e })\n  }\n\n  render() {\n    return <div className=\"width-100\">\n      <Container>\n        <Box my={4}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Our Campaigns\n          </Typography>\n          <Search emitSearchForm={this.emitSearchFormFn.bind(this)} resetTable={this.resetTableFn.bind(this)} />\n          <CampaignTable emittedSearchData={this.state} />\n        </Box>\n      </Container>\n    </div>;\n  }\n}\n\nexport default CampaignTemplate;\n","import React from 'react';\nimport './App.css';\nimport CampaignTemplate from './templates/campaign-template/campaign-template';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <CampaignTemplate />\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}